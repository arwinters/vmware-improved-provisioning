---
- name: Playbook - VM Customization
  hosts: all
  gather_facts: False
  vars:
    vm_name: pipo
    vcenter_hostname: 10.211.55.49
    vcenter_datacenter: Datacenter
    vm_template: rhel77_template
    vm_clone:
  tasks:

  - name: Deploy VM from vCenter template
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vcenter_datacenter }}"
      state: present
      folder: /Datacenter/vm
      template: "{{ vm_template }}"
      name: "{{ vm_name }}"
    delegate_to: 127.0.0.1
    register: vm_deploy_result
    when: vm_clone is defined

  - name: Configure VM metadata
    template:
      src: ./templates/metadata.json.j2
      dest: "/tmp/{{ vm_name }}-metadata.json"
    delegate_to: 127.0.0.1
    register: metadata_results

  - name: Configure VM userdata
    template:
      src: ./templates/userdata.yaml
      dest: "/tmp/{{ vm_name }}-userdata.yaml"
    delegate_to: 127.0.0.1
    register: userdata_results

  - name: Set VM guest properties with govc
    command: govc vm.change -vm "/Datacenter/vm/{{ vm_name }}" -e guestinfo.metadata="{{ lookup('env','VM_METADATA') }}" -e guestinfo.metadata.encoding="gzip+base64"  -e guestinfo.userdata="{{ lookup('env','VM_USERDATA') }}" -e guestinfo.userdata.encoding="gzip+base64"
    environment:
      GOVC_PASSWORD: "{{ vcenter_password }}"
      GOVC_INSECURE: true
      GOVC_URL: "https://{{ vcenter_hostname }}"
      GOVC_USERNAME: "{{ vcenter_username }}"
      VM_METADATA: "$(gzip -c9 </tmp/{{ vm_name }}-metadata.json | { base64 -w0 2>/dev/null || base64; })"
      VM_USERDATA: "$(gzip -c9 </tmp/{{ vm_name }}-userdata.yaml | { base64 -w0 2>/dev/null || base64; })"
    register: govc_result
#
#  - name: Power-on VM
#    vmguest:
#    register: vm_run_results











